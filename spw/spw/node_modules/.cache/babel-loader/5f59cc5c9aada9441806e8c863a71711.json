{"remainingRequest":"c:\\xampp\\htdocs\\zt\\myProject\\project-move\\phone_project\\spw\\spw\\node_modules\\babel-loader\\lib\\index.js!c:\\xampp\\htdocs\\zt\\myProject\\project-move\\phone_project\\spw\\spw\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\xampp\\htdocs\\zt\\myProject\\project-move\\phone_project\\spw\\spw\\src\\components\\testContainer.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\xampp\\htdocs\\zt\\myProject\\project-move\\phone_project\\spw\\spw\\src\\components\\testContainer.vue","mtime":1541125150000},{"path":"c:\\xampp\\htdocs\\zt\\myProject\\project-move\\phone_project\\spw\\spw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\xampp\\htdocs\\zt\\myProject\\project-move\\phone_project\\spw\\spw\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\xampp\\htdocs\\zt\\myProject\\project-move\\phone_project\\spw\\spw\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      msg: \"脚手架\"\n    };\n  },\n  methods: {\n    show: function show() {\n      console.log(\"执行 show 方法\");\n    }\n  },\n  beforeCreate: function beforeCreate() {//生命周期第一个函数，实例被创建 之前 ，会执行它\n    //注意：执行函数时 data和methods还没有被初始化（还不存在）\n    //console.log(this.msg);//undefined\n    //this.show();//报错\n  },\n  created: function created() {\n    //生命周期第二函数，实例被创建 之后\n    //注意：执行函数时data和methods都初始化好了\n    //最早可以操作data和methods\n    this.show(); //正常显示\n\n    console.log(this.msg); //正常打印\n  },\n  beforeMount: function beforeMount() {\n    //生命周期的第三个函数，模板已经在内存中编辑完成，但是尚未把模板渲染到页面上\n    //不可获得模板中的元素和内容\n    console.log(document.getElementById(\"h3\")); //null\n\n    console.log(h3.innerText); //报错\n  },\n  mounted: function mounted() {\n    //生命周期的第四个函数，模板已经在内存中编辑完成，把模板渲染页面结束\n    //是实例创建的最后一个生命周期函数，当执行完mounted表示实例已经完全创建好了\n    //如果没有其他操作，静静躺在内存中一动不动\n    //可获得模板中的元素和内容\n    console.log(document.getElementById(\"h3\")); //<p id=\"h3\">脚手架</p>\n\n    console.log(\"4.\" + h3.innerText); //脚手架\n  },\n  beforeUpdate: function beforeUpdate() {\n    //当执行beforeUpdate 页面中的数据仍是旧的\n    //                   内存data中的数据是新的\n    console.log(\"5.内存中DATA变量：\" + this.msg);\n    var h3 = document.getElementById(\"h3\");\n    console.log(\"5.模板中数据：\" + h3.innerText);\n  },\n  Updated: function Updated() {\n    //当执行beforeUpdate 页面中的数据是新的\n    //                  内存data中的数据是新的\n    console.log(\"6.内存中DATA变量：\" + this.msg);\n    var h3 = document.getElementById(\"h3\");\n    console.log(\"6.模板中数据：\" + h3.innerText);\n  }\n};",{"version":3,"sources":["testContainer.vue"],"names":[],"mappings":";;;;;;;;;AAUA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AAAA,WAAA;AAAA,KAAA;AACA,GAHA;AAIA,WAAA;AACA,QADA,kBACA;AAAA,cAAA,GAAA,CAAA,YAAA;AAAA;AADA,GAJA;AAOA,cAPA,0BAOA,CACA;AACA;AACA;AACA;AACA,GAZA;AAaA,SAbA,qBAaA;AACA;AACA;AACA;AACA,SAAA,IAAA,GAJA,CAIA;;AACA,YAAA,GAAA,CAAA,KAAA,GAAA,EALA,CAKA;AACA,GAnBA;AAoBA,aApBA,yBAoBA;AACA;AACA;AACA,YAAA,GAAA,CAAA,SAAA,cAAA,CAAA,IAAA,CAAA,EAHA,CAGA;;AACA,YAAA,GAAA,CAAA,GAAA,SAAA,EAJA,CAIA;AACA,GAzBA;AA0BA,SA1BA,qBA0BA;AACA;AACA;AACA;AACA;AACA,YAAA,GAAA,CAAA,SAAA,cAAA,CAAA,IAAA,CAAA,EALA,CAKA;;AACA,YAAA,GAAA,CAAA,OAAA,GAAA,SAAA,EANA,CAMA;AACA,GAjCA;AAkCA,cAlCA,0BAkCA;AACA;AACA;AACA,YAAA,GAAA,CAAA,iBAAA,KAAA,GAAA;AACA,QAAA,KAAA,SAAA,cAAA,CAAA,IAAA,CAAA;AACA,YAAA,GAAA,CAAA,aAAA,GAAA,SAAA;AACA,GAxCA;AAyCA,SAzCA,qBAyCA;AACA;AACA;AACA,YAAA,GAAA,CAAA,iBAAA,KAAA,GAAA;AACA,QAAA,KAAA,SAAA,cAAA,CAAA,IAAA,CAAA;AACA,YAAA,GAAA,CAAA,aAAA,GAAA,SAAA;AACA;AA/CA,CAAA","sourcesContent":["<template>\r\n    <div class=\"app-testContainer\">\r\n        <h1>测试的组件</h1>\r\n        <h1>生命周期</h1>\r\n        <h1>当前vue实例创建后自动触发事件，事件调用一些函数（钩子函数）</h1>\r\n        <input type=\"button\" value=\"修改\" @click=\"msg='ok'\">\r\n        <p id=\"h3\">{{msg}}</p>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default{\r\n        data(){\r\n            return {msg:\"脚手架\"}\r\n        },\r\n        methods:{\r\n            show(){console.log(\"执行 show 方法\")}\r\n        },\r\n        beforeCreate() {\r\n            //生命周期第一个函数，实例被创建 之前 ，会执行它\r\n            //注意：执行函数时 data和methods还没有被初始化（还不存在）\r\n            //console.log(this.msg);//undefined\r\n            //this.show();//报错\r\n        },\r\n        created(){\r\n            //生命周期第二函数，实例被创建 之后\r\n            //注意：执行函数时data和methods都初始化好了\r\n            //最早可以操作data和methods\r\n            this.show();//正常显示\r\n            console.log(this.msg);//正常打印\r\n        },\r\n        beforeMount() {\r\n            //生命周期的第三个函数，模板已经在内存中编辑完成，但是尚未把模板渲染到页面上\r\n            //不可获得模板中的元素和内容\r\n            console.log(document.getElementById(\"h3\"));//null\r\n            console.log(h3.innerText);//报错\r\n        },\r\n        mounted() {\r\n            //生命周期的第四个函数，模板已经在内存中编辑完成，把模板渲染页面结束\r\n            //是实例创建的最后一个生命周期函数，当执行完mounted表示实例已经完全创建好了\r\n            //如果没有其他操作，静静躺在内存中一动不动\r\n            //可获得模板中的元素和内容\r\n            console.log(document.getElementById(\"h3\"));//<p id=\"h3\">脚手架</p>\r\n            console.log(\"4.\"+h3.innerText);//脚手架\r\n        },\r\n        beforeUpdate() {\r\n            //当执行beforeUpdate 页面中的数据仍是旧的\r\n            //                   内存data中的数据是新的\r\n            console.log(\"5.内存中DATA变量：\"+this.msg);\r\n            var h3=document.getElementById(\"h3\");\r\n            console.log(\"5.模板中数据：\"+h3.innerText);\r\n        },\r\n        Updated() {\r\n            //当执行beforeUpdate 页面中的数据是新的\r\n            //                  内存data中的数据是新的\r\n            console.log(\"6.内存中DATA变量：\"+this.msg);\r\n            var h3=document.getElementById(\"h3\");\r\n            console.log(\"6.模板中数据：\"+h3.innerText);\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"\">\r\n    \r\n</style>"],"sourceRoot":"src\\components"}]}